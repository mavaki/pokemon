{"ast":null,"code":"import Parse from \"parse\";\n\n// create a new user\nexport const createUser = async newUser => {\n  const user = new Parse.User();\n  user.set(\"username\", newUser.email);\n  user.set(\"firstName\", newUser.firstName);\n  user.set(\"lastName\", newUser.lastName);\n  user.set(\"password\", newUser.password);\n  user.set(\"email\", newUser.email);\n  try {\n    const newUserSaved = await user.signUp();\n    return newUserSaved;\n  } catch (error) {\n    alert(`Error: ${error.message}`);\n    throw error; // rethrow to handle in calling function\n  }\n};\n\n// login current user\nexport const loginUser = async currUser => {\n  try {\n    const currUserSaved = await Parse.User.logIn(currUser.email, currUser.password);\n    return currUserSaved;\n  } catch (error) {\n    alert(`Error: ${error.message}`);\n    throw error; // rethrow to handle in calling function\n  }\n};\n\n// check if user is logged in\nexport const checkUser = async () => {\n  const user = await Parse.User.currentAsync();\n  return !!user;\n};\n\n// logout current user\nexport const logoutUser = async () => {\n  try {\n    await Parse.User.logOut();\n  } catch (error) {\n    console.log(\"Error logging out: \", error);\n  }\n};","map":{"version":3,"names":["Parse","createUser","newUser","user","User","set","email","firstName","lastName","password","newUserSaved","signUp","error","alert","message","loginUser","currUser","currUserSaved","logIn","checkUser","currentAsync","logoutUser","logOut","console","log"],"sources":["/home/mavrik/Documents/github/pokemon/src/Components/Auth/AuthService.js"],"sourcesContent":["import Parse from \"parse\";\r\n\r\n// create a new user\r\nexport const createUser = async (newUser) => {\r\n  const user = new Parse.User();\r\n  user.set(\"username\", newUser.email);\r\n  user.set(\"firstName\", newUser.firstName);\r\n  user.set(\"lastName\", newUser.lastName);\r\n  user.set(\"password\", newUser.password);\r\n  user.set(\"email\", newUser.email);\r\n\r\n  try {\r\n    const newUserSaved = await user.signUp();\r\n    return newUserSaved;\r\n  } catch (error) {\r\n    alert(`Error: ${error.message}`);\r\n    throw error; // rethrow to handle in calling function\r\n  }\r\n};\r\n\r\n// login current user\r\nexport const loginUser = async (currUser) => {\r\n  try {\r\n    const currUserSaved = await Parse.User.logIn(\r\n      currUser.email,\r\n      currUser.password\r\n    );\r\n    return currUserSaved;\r\n  } catch (error) {\r\n    alert(`Error: ${error.message}`);\r\n    throw error; // rethrow to handle in calling function\r\n  }\r\n};\r\n\r\n// check if user is logged in\r\nexport const checkUser = async () => {\r\n  const user = await Parse.User.currentAsync();\r\n  return !!user;\r\n};\r\n\r\n// logout current user\r\nexport const logoutUser = async () => {\r\n  try {\r\n    await Parse.User.logOut();\r\n  } catch (error) {\r\n    console.log(\"Error logging out: \", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,MAAMC,IAAI,GAAG,IAAIH,KAAK,CAACI,IAAI,CAAC,CAAC;EAC7BD,IAAI,CAACE,GAAG,CAAC,UAAU,EAAEH,OAAO,CAACI,KAAK,CAAC;EACnCH,IAAI,CAACE,GAAG,CAAC,WAAW,EAAEH,OAAO,CAACK,SAAS,CAAC;EACxCJ,IAAI,CAACE,GAAG,CAAC,UAAU,EAAEH,OAAO,CAACM,QAAQ,CAAC;EACtCL,IAAI,CAACE,GAAG,CAAC,UAAU,EAAEH,OAAO,CAACO,QAAQ,CAAC;EACtCN,IAAI,CAACE,GAAG,CAAC,OAAO,EAAEH,OAAO,CAACI,KAAK,CAAC;EAEhC,IAAI;IACF,MAAMI,YAAY,GAAG,MAAMP,IAAI,CAACQ,MAAM,CAAC,CAAC;IACxC,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,KAAK,CAAC,UAAUD,KAAK,CAACE,OAAO,EAAE,CAAC;IAChC,MAAMF,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,aAAa,GAAG,MAAMjB,KAAK,CAACI,IAAI,CAACc,KAAK,CAC1CF,QAAQ,CAACV,KAAK,EACdU,QAAQ,CAACP,QACX,CAAC;IACD,OAAOQ,aAAa;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,KAAK,CAAC,UAAUD,KAAK,CAACE,OAAO,EAAE,CAAC;IAChC,MAAMF,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMhB,IAAI,GAAG,MAAMH,KAAK,CAACI,IAAI,CAACgB,YAAY,CAAC,CAAC;EAC5C,OAAO,CAAC,CAACjB,IAAI;AACf,CAAC;;AAED;AACA,OAAO,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMrB,KAAK,CAACI,IAAI,CAACkB,MAAM,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdW,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEZ,KAAK,CAAC;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}