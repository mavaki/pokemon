{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\nvar _ParseInstallation = _interopRequireDefault(require(\"./ParseInstallation\"));\nvar _uuid = _interopRequireDefault(require(\"./uuid\"));\nconst CURRENT_INSTALLATION_KEY = 'currentInstallation';\nconst CURRENT_INSTALLATION_ID_KEY = 'currentInstallationId';\nlet iidCache = null;\nlet currentInstallationCache = null;\nlet currentInstallationCacheMatchesDisk = false;\nconst InstallationController = {\n  async updateInstallationOnDisk(installation) {\n    const path = _Storage.default.generatePath(CURRENT_INSTALLATION_KEY);\n    await _Storage.default.setItemAsync(path, (0, _stringify.default)(installation.toJSON()));\n    this._setCurrentInstallationCache(installation);\n  },\n  async currentInstallationId() {\n    if (typeof iidCache === 'string') {\n      return iidCache;\n    }\n    const path = _Storage.default.generatePath(CURRENT_INSTALLATION_ID_KEY);\n    let iid = await _Storage.default.getItemAsync(path);\n    if (!iid) {\n      iid = (0, _uuid.default)();\n      return _Storage.default.setItemAsync(path, iid).then(() => {\n        iidCache = iid;\n        return iid;\n      });\n    }\n    iidCache = iid;\n    return iid;\n  },\n  async currentInstallation() {\n    if (currentInstallationCache) {\n      return currentInstallationCache;\n    }\n    if (currentInstallationCacheMatchesDisk) {\n      return null;\n    }\n    const path = _Storage.default.generatePath(CURRENT_INSTALLATION_KEY);\n    let installationData = await _Storage.default.getItemAsync(path);\n    currentInstallationCacheMatchesDisk = true;\n    if (installationData) {\n      installationData = JSON.parse(installationData);\n      installationData.className = '_Installation';\n      const current = _ParseInstallation.default.fromJSON(installationData);\n      currentInstallationCache = current;\n      return current;\n    }\n    const installationId = await this.currentInstallationId();\n    const installation = new _ParseInstallation.default();\n    installation.set('deviceType', _ParseInstallation.default.DEVICE_TYPES.WEB);\n    installation.set('installationId', installationId);\n    installation.set('parseVersion', _CoreManager.default.get('VERSION'));\n    currentInstallationCache = installation;\n    await _Storage.default.setItemAsync(path, (0, _stringify.default)(installation.toJSON()));\n    return installation;\n  },\n  _clearCache() {\n    iidCache = null;\n    currentInstallationCache = null;\n    currentInstallationCacheMatchesDisk = false;\n  },\n  _setInstallationIdCache(iid) {\n    iidCache = iid;\n  },\n  _setCurrentInstallationCache(installation) {\n    let matchesDisk = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    currentInstallationCache = installation;\n    currentInstallationCacheMatchesDisk = matchesDisk;\n  }\n};\nmodule.exports = InstallationController;\nvar _default = exports.default = InstallationController;","map":{"version":3,"names":["_Object$defineProperty","require","_interopRequireDefault","exports","value","default","_stringify","_CoreManager","_Storage","_ParseInstallation","_uuid","CURRENT_INSTALLATION_KEY","CURRENT_INSTALLATION_ID_KEY","iidCache","currentInstallationCache","currentInstallationCacheMatchesDisk","InstallationController","updateInstallationOnDisk","installation","path","generatePath","setItemAsync","toJSON","_setCurrentInstallationCache","currentInstallationId","iid","getItemAsync","then","currentInstallation","installationData","JSON","parse","className","current","fromJSON","installationId","set","DEVICE_TYPES","WEB","get","_clearCache","_setInstallationIdCache","matchesDisk","arguments","length","undefined","module","_default"],"sources":["/home/mavrik/Documents/github/pokemon/node_modules/parse/lib/browser/InstallationController.js"],"sourcesContent":["\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\nvar _ParseInstallation = _interopRequireDefault(require(\"./ParseInstallation\"));\nvar _uuid = _interopRequireDefault(require(\"./uuid\"));\nconst CURRENT_INSTALLATION_KEY = 'currentInstallation';\nconst CURRENT_INSTALLATION_ID_KEY = 'currentInstallationId';\nlet iidCache = null;\nlet currentInstallationCache = null;\nlet currentInstallationCacheMatchesDisk = false;\nconst InstallationController = {\n  async updateInstallationOnDisk(installation) {\n    const path = _Storage.default.generatePath(CURRENT_INSTALLATION_KEY);\n    await _Storage.default.setItemAsync(path, (0, _stringify.default)(installation.toJSON()));\n    this._setCurrentInstallationCache(installation);\n  },\n  async currentInstallationId() {\n    if (typeof iidCache === 'string') {\n      return iidCache;\n    }\n    const path = _Storage.default.generatePath(CURRENT_INSTALLATION_ID_KEY);\n    let iid = await _Storage.default.getItemAsync(path);\n    if (!iid) {\n      iid = (0, _uuid.default)();\n      return _Storage.default.setItemAsync(path, iid).then(() => {\n        iidCache = iid;\n        return iid;\n      });\n    }\n    iidCache = iid;\n    return iid;\n  },\n  async currentInstallation() {\n    if (currentInstallationCache) {\n      return currentInstallationCache;\n    }\n    if (currentInstallationCacheMatchesDisk) {\n      return null;\n    }\n    const path = _Storage.default.generatePath(CURRENT_INSTALLATION_KEY);\n    let installationData = await _Storage.default.getItemAsync(path);\n    currentInstallationCacheMatchesDisk = true;\n    if (installationData) {\n      installationData = JSON.parse(installationData);\n      installationData.className = '_Installation';\n      const current = _ParseInstallation.default.fromJSON(installationData);\n      currentInstallationCache = current;\n      return current;\n    }\n    const installationId = await this.currentInstallationId();\n    const installation = new _ParseInstallation.default();\n    installation.set('deviceType', _ParseInstallation.default.DEVICE_TYPES.WEB);\n    installation.set('installationId', installationId);\n    installation.set('parseVersion', _CoreManager.default.get('VERSION'));\n    currentInstallationCache = installation;\n    await _Storage.default.setItemAsync(path, (0, _stringify.default)(installation.toJSON()));\n    return installation;\n  },\n  _clearCache() {\n    iidCache = null;\n    currentInstallationCache = null;\n    currentInstallationCacheMatchesDisk = false;\n  },\n  _setInstallationIdCache(iid) {\n    iidCache = iid;\n  },\n  _setCurrentInstallationCache(installation) {\n    let matchesDisk = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    currentInstallationCache = installation;\n    currentInstallationCacheMatchesDisk = matchesDisk;\n  }\n};\nmodule.exports = InstallationController;\nvar _default = exports.default = InstallationController;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}