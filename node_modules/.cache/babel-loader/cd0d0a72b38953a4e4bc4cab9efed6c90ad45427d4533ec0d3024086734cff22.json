{"ast":null,"code":"import Parse from \"parse\";\n//separate parse model for each class\n// Function to get all names from Parse\nexport const getAllNames = () => {\n  const Feature4 = Parse.Object.extend(\"Feature4\");\n  const query = new Parse.Query(Feature4);\n  return query.find().then(results => {\n    return results.map(item => ({\n      id: item.id,\n      name: item.get(\"Name\") // Assuming \"name\" is a field in your class\n    }));\n  }).catch(error => {\n    console.log(\"error: \", error);\n  });\n};","map":{"version":3,"names":["Parse","getAllNames","Feature4","Object","extend","query","Query","find","then","results","map","item","id","name","get","catch","error","console","log"],"sources":["/Users/jonathandemarco/react/my-app/src/Components/LearnService.js"],"sourcesContent":["import Parse from \"parse\";\n//separate parse model for each class\n// Function to get all names from Parse\nexport const getAllNames = () => {\n  const Feature4 = Parse.Object.extend(\"Feature4\");\n  const query = new Parse.Query(Feature4);\n  return query\n    .find()\n    .then((results) => {\n      return results.map((item) => ({\n        id: item.id,\n        name: item.get(\"Name\"), // Assuming \"name\" is a field in your class\n      }));\n    })\n    .catch((error) => {\n      console.log(\"error: \", error);\n    });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAACC,MAAM,CAAC,UAAU,CAAC;EAChD,MAAMC,KAAK,GAAG,IAAIL,KAAK,CAACM,KAAK,CAACJ,QAAQ,CAAC;EACvC,OAAOG,KAAK,CACTE,IAAI,CAAC,CAAC,CACNC,IAAI,CAAEC,OAAO,IAAK;IACjB,OAAOA,OAAO,CAACC,GAAG,CAAEC,IAAI,KAAM;MAC5BC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,IAAI,EAAEF,IAAI,CAACG,GAAG,CAAC,MAAM,CAAC,CAAE;IAC1B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;EAC/B,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}