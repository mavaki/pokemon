{"ast":null,"code":"var _jsxFileName = \"/home/mavrik/Documents/github/pokemon/src/Components/Auth/AuthLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUser } from \"./AuthService\";\nimport AuthForm from \"./AuthForm\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isAuthenticated,\n    setIsAuthenticated\n  } = useAuth();\n  const [currentUser, setCurrentUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (isAuthenticated) {\n      alert(\"You are already logged in\");\n      navigate(\"/pokemon\");\n    }\n  }, [isAuthenticated, navigate]);\n  const onChangeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentUser(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    try {\n      const userLoggedIn = await loginUser(currentUser);\n      if (userLoggedIn) {\n        alert(`Welcome back, ${userLoggedIn.get(\"firstName\")}!`);\n        setIsAuthenticated(true); // update AuthContext\n        navigate(\"/pokemon\"); // redirect to Pokemon\n      }\n    } catch (error) {\n      // error handled in AuthService\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    user: currentUser,\n    isLogin: true,\n    onChange: onChangeHandler,\n    onSubmit: onSubmitHandler,\n    disabled: isSubmitting\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthLogin, \"qmJZ6zjoxEjeGCxhZMZHPNPoGJ8=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = AuthLogin;\nexport default AuthLogin;\nvar _c;\n$RefreshReg$(_c, \"AuthLogin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","loginUser","AuthForm","useAuth","jsxDEV","_jsxDEV","AuthLogin","_s","navigate","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","email","password","isSubmitting","setIsSubmitting","alert","onChangeHandler","e","name","value","target","prev","onSubmitHandler","preventDefault","userLoggedIn","get","error","user","isLogin","onChange","onSubmit","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mavrik/Documents/github/pokemon/src/Components/Auth/AuthLogin.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"./AuthService\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst AuthLogin = () => {\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated, setIsAuthenticated } = useAuth();\r\n  const [currentUser, setCurrentUser] = useState({ email: \"\", password: \"\" });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      alert(\"You are already logged in\");\r\n      navigate(\"/pokemon\");\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  const onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    try {\r\n      const userLoggedIn = await loginUser(currentUser);\r\n      if (userLoggedIn) {\r\n        alert(`Welcome back, ${userLoggedIn.get(\"firstName\")}!`);\r\n        setIsAuthenticated(true); // update AuthContext\r\n        navigate(\"/pokemon\"); // redirect to Pokemon\r\n      }\r\n    } catch (error) {\r\n      // error handled in AuthService\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthForm\r\n      user={currentUser}\r\n      isLogin={true}\r\n      onChange={onChangeHandler}\r\n      onSubmit={onSubmitHandler}\r\n      disabled={isSubmitting}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,eAAe;IAAEC;EAAmB,CAAC,GAAGP,OAAO,CAAC,CAAC;EACzD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC;IAAEe,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC3E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,IAAIU,eAAe,EAAE;MACnBQ,KAAK,CAAC,2BAA2B,CAAC;MAClCT,QAAQ,CAAC,UAAU,CAAC;IACtB;EACF,CAAC,EAAE,CAACC,eAAe,EAAED,QAAQ,CAAC,CAAC;EAE/B,MAAMU,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCV,cAAc,CAAEW,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,MAAMG,eAAe,GAAG,MAAOL,CAAC,IAAK;IACnCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBT,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACF,MAAMU,YAAY,GAAG,MAAMzB,SAAS,CAACU,WAAW,CAAC;MACjD,IAAIe,YAAY,EAAE;QAChBT,KAAK,CAAC,iBAAiBS,YAAY,CAACC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC;QACxDjB,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1BF,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;MACxB;IACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACd;IAAA,CACD,SAAS;MACRZ,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACEX,OAAA,CAACH,QAAQ;IACP2B,IAAI,EAAElB,WAAY;IAClBmB,OAAO,EAAE,IAAK;IACdC,QAAQ,EAAEb,eAAgB;IAC1Bc,QAAQ,EAAER,eAAgB;IAC1BS,QAAQ,EAAElB;EAAa;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN,CAAC;AAAC9B,EAAA,CA5CID,SAAS;EAAA,QACIN,WAAW,EACoBG,OAAO;AAAA;AAAAmC,EAAA,GAFnDhC,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}